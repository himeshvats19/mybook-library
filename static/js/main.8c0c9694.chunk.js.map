{"version":3,"sources":["BooksAPI.js","Components/Bookshelf.js","Components/SearchBook.js","Components/ListBooks.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","update","book","shelf","fetch","id","method","body","JSON","stringify","then","res","json","Bookshelf","handleChange","props","shelfSelected","className","this","sectionTitle","books","map","key","style","width","height","backgroundImage","imageLinks","thumbnail","onChange","event","target","value","disabled","title","Array","isArray","authors","join","Component","SearchBook","parseBooksForShelf","savedBooks","location","state","forEach","savedBook","searchQuery","query","trim","length","data","BooksAPI","setState","updateShelf","to","type","placeholder","minLength","debounceTimeout","ListBooks","currentlyReading","wantToRead","read","showLoader","getBookFromId","bookIdToParse","filter","some","bookIds","pathname","BooksApp","exact","path","component","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8c0c9694.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, { \n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nexport default class Bookshelf extends Component {\n\n  static propTypes = {\n    books : PropTypes.array.isRequired,\n    shelfSelected: PropTypes.func.isRequired,\n    sectionTitle: PropTypes.string.isRequired\n  }\n\n  handleChange = (shelf, book) => {\n      book.shelf = shelf;\n      this.props.shelfSelected(shelf, book);\n  };\n  render() {\n      return (\n          <div className=\"bookshelf\">\n  <h2 className=\"bookshelf-title\">{this.props.sectionTitle}</h2>\n                <div className=\"bookshelf-books\">\n                  <ol className=\"books-grid\">\n                  {this.props.books && this.props.books.map((book) => (\n                      <li key={book.id}>\n                        <div className=\"book\">\n                          <div className=\"book-top\">\n                            <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage:`url(${book.imageLinks && book.imageLinks.thumbnail?`${book.imageLinks.thumbnail}`:`http://via.placeholder.com/128x193?text=No%20Cover`})` }}></div>\n                            <div className=\"book-shelf-changer\">\n                              <select \n                                onChange={(event) => this.handleChange(event.target.value, book)}\n                                value={book.shelf}>\n                                <option value=\"move\" disabled>Move to...</option>\n                                <option value=\"currentlyReading\">Currently Reading</option>\n                                <option value=\"wantToRead\">Want to Read</option>\n                                <option value=\"read\">Read</option>\n                                <option value=\"none\">None</option>\n                              </select>\n                            </div>\n                          </div>\n                          <div className=\"book-title\">{book.title}</div>\n                          <div className=\"book-authors\">\n                            { Array.isArray(book.authors) ? book.authors.join(', '):'' }\n                          </div>\n                        </div>\n                    </li>\n                  ))}\n                  </ol>\n                </div>\n          </div>\n      )\n  }\n}\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport * as BooksAPI from '../BooksAPI'\nimport BookShelf from './Bookshelf'\n\nimport {DebounceInput} from 'react-debounce-input';\n\nexport default class SearchBook extends Component {\n  constructor(){\n    super();\n    this.state = {\n      query: '',\n      books: []\n    }\n  }\n  parseBooksForShelf = (books) => {\n    const { savedBooks } = this.props.location.state;\n      books.forEach((book) => {\n      book.shelf = 'none'  \n      savedBooks.forEach((savedBook) => {\n        if(book.id === savedBook.id){\n          book.shelf = savedBook.shelf;\n        }\n      })\n    });\n  }\n  searchQuery = (query) => {\n    query = query.trim()\n    if(query.length > 0){\n      BooksAPI.search(query).then((books) => {\n        if(books.length > -1){\n          this.parseBooksForShelf(books);\n          this.setState({\n            books\n          });\n        }\n      });\n    }\n    this.setState({\n      books: []\n    });\n  }\n\n  updateShelf = (shelf, book) => {\n    BooksAPI.update(book, shelf);\n  }\n    render() {\n        return (\n            <div className=\"search-books\">\n            <div className=\"search-books-bar\">\n              <Link to=\"/mybook-library\">\n              <button className=\"close-search\">Close</button>\n              </Link>\n              <div className=\"search-books-input-wrapper\">\n                  <DebounceInput\n                  type=\"text\" \n                  placeholder=\"Search by title or author\" \n                  minLength={1}\n                  debounceTimeout={300}\n                  onChange={event => this.searchQuery(event.target.value)} />\n              </div>\n            </div>\n            { this.state.books.length > 0 && (\n            <div className=\"search-books-results\">\n            <BookShelf \n                    books={this.state.books}\n                    shelfSelected={this.updateShelf} \n                    sectionTitle=\"Searched Books\"/>\n            </div>\n            )}\n          </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport BookShelf from './Bookshelf'\nimport * as BooksAPI from '../BooksAPI'\n\nexport default class ListBooks extends Component {\n    state = {\n        books:[],\n        currentlyReading: [],\n        wantToRead: [],\n        read: [],\n        showLoader: false\n    }\n    componentDidMount(){\n        this.setState({ showLoader: true });\n        BooksAPI.getAll().then((books) => {\n          const currentlyReading = books.filter( book => {\n            return book.shelf === \"currentlyReading\"\n          })\n          const wantToRead = books.filter( book => {\n              return book.shelf === \"wantToRead\"\n          })\n          const read = books.filter( book => {\n              return book.shelf === \"read\"\n          });\n          this.setState({\n            books,\n            currentlyReading,\n            wantToRead,\n            read\n          })\n        this.setState({ showLoader: false })\n        })\n    }\n\n    getBookFromId = (bookIdToParse) => {\n        return this.state.books.filter(book => {\n            return bookIdToParse.some((id) => {\n                return book.id === id\n            })\n        })\n    }\n    \n    updateShelf = (shelf, book) => {\n        this.setState({ showLoader: true })\n        BooksAPI.update(book, shelf).then((bookIds) => {\n            const { currentlyReading, wantToRead, read } = bookIds\n            this.setState({\n                currentlyReading : this.getBookFromId(currentlyReading),\n                wantToRead : this.getBookFromId(wantToRead),\n                read : this.getBookFromId(read),\n                showLoader: false\n              })\n          })\n    }\n\n    render() {\n        return (\n            <div className=\"list-books\">\n            <div className=\"list-books-title\">\n              <h1>MyReads</h1>\n              {this.state.showLoader && (\n                    <div className=\"spinner-wrap\">\n                        <div className=\"spinner\"></div>\n                    </div>)\n                }\n            </div>\n            <div className=\"list-books-content\">\n              <div>\n                <BookShelf \n                    books={this.state.currentlyReading}\n                    shelfSelected={this.updateShelf} \n                    sectionTitle=\"Currently Reading\"/>\n                <BookShelf \n                    books={this.state.wantToRead}\n                    shelfSelected={this.updateShelf}  \n                    sectionTitle=\"Want To Read\"/>\n                <BookShelf \n                    books={this.state.read}\n                    shelfSelected={this.updateShelf}  \n                    sectionTitle=\"Read\"/>\n              </div>\n            </div>\n            <div className=\"open-search\">\n                <Link to={{\n                    pathname: '/mybook-library/search',\n                    state: {savedBooks: this.state.books}\n                }}>\n                    <button>Add a Book</button>\n                </Link>\n            </div>\n          </div>\n        )\n    }\n}\n","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport './App.css'\n\nimport SearchBook from './Components/SearchBook'\nimport ListBooks from './Components/ListBooks'\n\nclass BooksApp extends React.Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <Route exact path=\"/mybook-library\" component={ListBooks}></Route>\n        <Route path=\"/mybook-library/search\" component={SearchBook}></Route>\n        \n      </div>\n    )\n  }\n}\n\nexport default BooksApp\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'))\n"],"sourceRoot":""}